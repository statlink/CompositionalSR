alfa.sar2 <- function(y, x, a, coords, k = 2:15, xnew = NULL, coordsnew, yb = NULL) {

  reg <- function(para, ystar, ax, a, ha, d, D) {
    be <- matrix(para, ncol = d)
    zz <- cbind( 1, exp(ax %*% be) )
    ta <- rowSums(zz)
    za <- zz / ta
    ma <- ( D / a * za - 1/a ) %*% ha
    as.vector( ystar - x %*% be )
  }

  regalr <- function(para, ystar, x, d) {
    be <- matrix(para, ncol = d)
    ma <- x %*% be
    as.vector( ystar - x %*% be )
  }

  rega <- function(rho, ya, Wya, ax, a, ha, d, D, n, ini) {
    ystar <- ya - rho * Wya
    suppressWarnings({
      mod <- minpack.lm::nls.lm( par = ini, fn = reg, ystar = ystar, ax = ax, a = a, ha = ha, d = d, D = D,
                                 control = minpack.lm::nls.lm.control(maxiter = 5000) )
    })
    0.5 * n * log(mod$deviance / n) - d * sum( log( Mod(1 - rho * values) ) )
  }

  rega0 <- function(rho, ya, Wya, x, d, n, ini) {
    ystar <- ya - rho * Wya
    suppressWarnings({
      mod <- minpack.lm::nls.lm( par = ini, fn = regalr, ystar = ystar, x = x, d = d,
                                 control = minpack.lm::nls.lm.control(maxiter = 5000) )
    })
    0.5 * n * log(mod$deviance / n) - d * sum( log( Mod(1 - rho * values) ) )
  }


  runtime <- proc.time()
  D <- dim(y)[2]
  d <- D - 1  ## dimensionality of the simplex
  n <- dim(y)[1]

  if ( is.null(yb) ) {
    ya <- Compositional::alfa(y, a)$aff
  } else  ya <- yb
  x <- model.matrix( ya ~., data.frame(x) )
  p <- dim(x)[2]

  be <- est <- rho2 <- list()
  ini <- rnorm(d * p)

  if ( a > 1e-5 ) {
    ax <- a * x
    ha <- t( Compositional::helm(D) )
  }

  cords <- pi * coords / 180  ## from degrees to rads
  a1 <- sin(cords[, 1])
  coord <- cbind( cos(cords[, 1]), a1 * cos(cords[, 2]), a1 * sin(cords[, 2]) )
  W <- Rfast::Dist(coord, square = TRUE)
  B <- Rfast::rowOrder(W)
  W <- 1/W

  cordsnew <- pi * coordsnew / 180  ## from degrees to rads
  a1 <- sin(cordsnew[, 1])
  coordnew <- cbind( cos(cordsnew[, 1]), a1 * cos(cordsnew[, 2]), a1 * sin(cordsnew[, 2]) )
  Wnew <- Rfast::Dist(coordnew, square = TRUE)
  Bnew <- Rfast::rowOrder(Wnew)
  Wnew <- 1/Wnew


  xnew <- model.matrix(~., data.frame(xnew) )

  for ( i in k ) {

    b <- B
    b[b > i + 1] <- 0
    b[b > 0] <- 1
    w <- b * W
    b <- NULL
    diag(w) <- 0
    w <- w / Rfast::rowsums(w)
    values <- eigen(w, symmetric = FALSE, only.values = TRUE)$values

    if ( a <= 1e-5 ) {
      if ( is.null(yb) ) {
        ya <- Compositional::alr(y)
      } else  ya <- yb
        wya <- w %*% ya
        rho <- optimize(rega0, c(0, 1), ya = ya, Wya = wya, x = x, d = d, n = n, ini = ini)$minimum
        ystar <- ya - rho * wya
        suppressWarnings({
          mod <- minpack.lm::nls.lm( par = ini, fn = regalr, ystar = ystar, x = x, d= d,
                                     control = minpack.lm::nls.lm.control(maxiter = 5000) )
        })
      bes <- matrix(mod$par, ncol = d)

    } else {
      wya <- w %*% ya
      rho <- optimize( rega, c(0, 1), ya = ya, Wya = wya, ax = ax, a = a, ha = ha, d = d,
                       D = D, n = n, ini = ini )$minimum
      ystar <- ya - rho * wya
      suppressWarnings({
        mod <- minpack.lm::nls.lm( par = ini, fn = reg, ystar = ystar, ax = ax, a = a, ha = ha, d = d, D = D,
                                   control = minpack.lm::nls.lm.control(maxiter = 5000) )
      })
      bes <- matrix(mod$par, ncol = d)
    }  ## end if (a == 0)

    if ( is.null( colnames(x) ) ) {
      p <- dim(x)[2] - 1
      rownames(bes) <- c("constant", paste("X", 1:p, sep = "") )
    } else rownames(bes)  <- c("constant", colnames(x)[-1] )

    b <- Bnew
    b[b > i + 1] <- 0
    b[b > 0] <- 1
    wnew <- b * Wnew
    b <- NULL
    diag(wnew) <- 0
    wnew <- wnew / Rfast::rowsums(wnew)
    est2 <- cbind( 1, exp(xnew %*% bes) )
    est2 <- est2/Rfast::rowsums(est2)
    nu <- dim(est2)[1]
    est[[ i ]] <- (1 - rho) * solve(diag(nu) - rho * wnew, est2)
    be[[ i ]] <- bes
    rho2[[ i ]] <- rho

  } ##  end for ( i in k ) {

  list(runtime = runtime, be = be, rho = rho2, est = est)
}



